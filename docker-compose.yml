x-default-opts: 
  &default-opts
  logging:
    options:
      max-size: "1m" 
      mode: "non-blocking"

services:
  proxy:
    <<: *default-opts
    depends_on:
      - dockersocket
    image: traefik:2.10
    restart: unless-stopped
    volumes:
      - ./logs:/logs
      - ./certs:/certs
      - ./dynconf:/dynconf
    environment:
      TZ: "Europe/Warsaw"
    command:
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.endpoint=tcp://dockersocket:2375"
        # Do not use SWARM
      - "--providers.docker.swarmMode=false"
      - "--providers.docker.network=traefik-public"

      - "--providers.file.directory=/dynconf"
      - "--providers.file.watch=true"

        # Do not allow unknown domains to connect to instance
      - "--serversTransport.insecureSkipVerify=true"

      - "--log=true"
      - "--log.filePath=/logs/traefik.log"
      - "--log.level=ERROR"
      - "--accesslog=true"
      - "--accesslog.filepath=/logs/access.log"
      - "--accesslog.bufferingsize=256"
      - "--accesslog.format=json"
      - "--accesslog.fields.headers.defaultMode=drop"
      - "--accesslog.fields.headers.names.User-Agent=keep"

      - "--api=true"
      - "--api.dashboard=true"

      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"


      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
        
        #HSTS
      # - ""
      # - ""
      # - "--entryPoints.websecure.http.middlewares=forceHSTS"
      # - "--entryPoints.websecure.http.middlewares=test-inflight@file,test-security@file"

        # SLOWLORIS
      - "--entryPoints.web.transport.respondingTimeouts.idleTimeout=3"
      - "--entryPoints.websecure.transport.respondingTimeouts.idleTimeout=3"

      # - "--entryPoints.web.transport.respondingTimeouts.readTimeout=3"
      # - "--entryPoints.websecure.transport.respondingTimeouts.readTimeout=3"
        # Denial of Service
      - "--entryPoints.web.http2.maxConcurrentStreams=100"
      - "--entryPoints.websecure.http2.maxConcurrentStreams=100"

      # Lets Encrypt Provider of SSL certificates (for https)
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=${ACME_NOTIFICATION_MAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"

    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`${SERVICE_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_CREDENTIALS}"

      - "traefik.http.services.traefik.loadbalancer.server.port=80"
    networks:
      - traefik-socket
      - traefik-public

  dockersocket:
    <<: *default-opts
    image: tecnativa/docker-socket-proxy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      CONTAINERS: 1
      NETWORKS: 1
      SERVICES: 1
      SWARM: 0
      TASKS: 1
    deploy:
      mode: global
      placement:
        constraints:
          - "node.role==manager"
    networks:
      - traefik-socket

networks:
  traefik-public:
    external: true
  traefik-socket:
    driver_opts:
      encrypted: 'true'
